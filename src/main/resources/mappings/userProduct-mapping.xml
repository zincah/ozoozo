<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="UserProduct">

	<!-- 상품 상세 페이지 가져오기 -->
	<select id="product_get" resultType="userproduct">
		SELECT DISTINCT ON(option1) pp.post_couponid, p.product_postid, 	po.option1,c.cate_name,sc.subcate_name, s.company_name,pp.post_name, pp.sale_ratio, pp.whole_price, p.product_id, po.option1_name, po.option2_name from product_posting pp
	inner join product p on pp.post_id = p.product_postid 
	inner join product_option po on p.product_id = po.op_productid
	inner join seller s on s.seller_id = pp.post_sellerid 
	inner join category c ON c.cate_code = po_category 
	inner join sub_category sc ON sc.subcate_code = pp.po_subcate 
	where pp.post_id = #{post_id}; <!-- 여기다가 id 값 넣어주면 됨 -->
	</select>
	
	<!-- 2번 옵션 겁색 셀렉트	 -->
	<select id="product_option2_get" resultType="userproduct">
		SELECT  s.company_name,ps.post_name, ps.sale_ratio, ps.whole_price, p.product_id, po.option1_name , po.option1, po.option2_name , po.option2  FROM seller s 
			INNER JOIN product_posting ps ON ps.post_sellerid = s.seller_id 
			INNER JOIN product p ON p.product_postid =  ps.post_id 
			INNER JOIN product_option po ON p.product_id = po.op_productid	
			WHERE po.option1 = #{option1} AND post_id=#{post_id};
	</select>
	
	<select id="product_Get_img" resultType="userproduct">
	select pi2.photo_url, pi2.photo_separate  from product_posting pp 
		inner join product_image pi2 on pi2.photo_postid = pp.post_id 
		where pp.post_id = #{post_id} order by pi2.photo_id asc;
	</select>
	<!-- product coupon query -->
	<select id="get_coupon" resultType="usercoupon">
		select * from product_coupon where coupon_id = #{post_couponid};
	</select>
	
	<insert id="coupon_insert">
		insert into user_coupon ( user_usernum, user_couponid, user_couponstatus, user_copostid) 
		values(#{user_usernum}, #{coupon_id},#{user_couponstatus},#{user_copostid})
	</insert>
	
	<select id="user_coupon" resultType="usercoupon">
		select * from user_coupon where user_usernum = #{user_usernum} and user_couponid = #{coupon_id};
	</select>
	<!-- product table -->
	<select id="product_Get_table" resultType="user_P_table">
		select * from product_tables 
			where protable_postid = #{protable_postid};
	</select>
	
	<select id="basket_info" resultType="cart">
		select cart_product, cart_post, cart_quantity from cart c 
			where cart_user = #{user_num};
	</select>
	
	<select id="product_Get_id" resultType="cart">
	SELECT p.product_id,p.seller_id,p.product_price FROM product p 
		inner join product_option po on p.product_id = po.op_productid 
		where po.option1 = #{option1} and po.option2 = #{option2} and p.product_postid = ${post_id};
	</select>
	
	<!-- 주소 -->
	<insert id="addr_add">
	insert into address(address_name, receiver, phone_num, address1, address2, addr_default,user_num)
		values(#{address_name}, #{receiver}, #{phone_num}, #{address1}, #{address2}, #{addr_default}, ${user_num})
	</insert>
	
	<select id="addr_default_check">
		select * from address where user_num = #{user_num}; 
	</select>
	
	<insert id="cart_add" >
	insert into cart(cart_user,cart_post,cart_product,  cart_quantity,  cart_payment, cart_seller) 
		values (#{cart_user},#{cart_post}, #{product_id}, #{EA}, #{cart_payment}, #{seller_id} );
	</insert>
	
	<update id="cart_upload">
	update cart set cart_quantity= #{cart_quantity}, cart_payment = #{cart_payment}
		where cart_product = #{cart_product}
	</update>
	
	<!-- 장바구니 load -->
	<select id="cart_Get" resultType="cart">
		select * from cart where cart_user= #{cart_user};	
	</select>
	<select id="pro_Get" resultType="userproduct">
		select p.*, po.*, pp.whole_price, pp.sale_ratio, c.cart_quantity from product p
	inner join product_option po on po.op_productid = p.product_id
	inner join product_posting pp on pp.post_id = p.product_postid 
	inner join cart c on c.cart_product = product_id 	
	where product_id = #{cart_product};
	</select>
	<select id="seller_filter" resultType="userproduct">
		select distinct on(cart_seller) cart.*, s.company_name, s.seller_id  from cart 
		inner join seller s on s.seller_id = cart.cart_seller 
	where cart_user=#{cart_user};
	</select>
	<select id="post_filter_name" resultType="userproduct">
		select distinct on(cart_post) c.*,pp.post_name,pp.post_id,pp.post_sellerid,pp.post_shipfee,pimg.photo_url  from cart c 
	inner join product_posting pp on pp.post_id = c.cart_post 
	inner join seller s on c.cart_seller  = s.seller_id 
	  INNER JOIN (
         SELECT photo_id, photo_postid, photo_url FROM product_image 
         WHERE (photo_id, photo_postid) 
         IN (
            SELECT MIN(photo_id) AS photo_id, photo_postid
            FROM product_image 
            GROUP BY photo_postid 
         )
      ) pimg ON pp.post_id  = pimg.photo_postid
where cart_user=#{cart_user};
	</select>	
	
	
	<select id="option_name_Get" resultType="userproduct">
		select option1, option2 from product_option where op_productid = #{product_id};
	</select>
	
	<update id="cart_update">
		update cart set cart_quantity = #{cart_quantity} where cart_product = #{cart_product};
	</update>
	
	<delete id="cart_delete_pro">
		delete from cart where cart_product = #{cart_product};
	</delete>
	<delete id="cart_delete_post">
		delete from cart where cart_post =#{cart_post};
	</delete>
	
	<!-- 결제 페이지 -->
	<select id="payment_cart_get" resultType="cart">
		select * from cart
			where cart_user = #{cart_user} and cart_post = #{cart_post};
	</select>
	<select id="payment_pro_get" resultType="userproduct">
		select p.*, po.*, pp.whole_price, pp.sale_ratio, c.cart_quantity,p.product_price from product p
	inner join product_option po on po.op_productid = p.product_id
	inner join product_posting pp on pp.post_id = p.product_postid 
	inner join cart c on c.cart_product = product_id 	
	where product_id = #{cart_product};
	</select>
	<select id="get_post" resultType="userproduct">
		select distinct on(cart_post) c.*,pp.post_name,pp.post_id,pp.post_sellerid,pp.post_shipfee,pimg.photo_url, pp.post_name,s.company_name, pp.post_couponid 
		 from cart c 
	inner join product_posting pp on pp.post_id = c.cart_post 
	inner join seller s on c.cart_seller  = s.seller_id 
	  INNER JOIN (
         SELECT photo_id, photo_postid, photo_url FROM product_image 
         WHERE (photo_id, photo_postid) 
         IN (
            SELECT MIN(photo_id) AS photo_id, photo_postid
            FROM product_image 
            GROUP BY photo_postid 
         )
      ) pimg ON pp.post_id  = pimg.photo_postid
where cart_user=#{cart_user} AND  cart_post= #{cart_post};
	</select>
	<select id="address_check" resultType="address">
		select a.*, ut.user_email  from address a
	inner join user_table ut on ut.user_num = a.user_num 
	where a.user_num = #{cart_user};
	</select>
	<select id="address_true" resultType="address">
	select a.* from address a
	where a.user_num = #{cart_user} and a.addr_default = true;
	</select>
	<insert id="payment_add">
		insert into payment(payment_id,pay_ordernum,payment_way,payment_total, py_sellerid, py_final, py_orderid ,py_couponid, py_discount)
	values((select coalesce(max(payment_id), 0)+1 from payment),#{ merchant_uid},#{pay_method},#{price},#{seller_id},#{paid_amount},#{py_orderid},#{coupon_id},#{discount} );
	</insert>
	<select id="order_select" resultType="int">
	select order_id from user_order where order_num = #{merchant_uid} and payment = #{final_price};
	</select>
	<insert id="order_add">
	insert into user_order(order_id,quantity, order_status, product_id, user_num, seller_id, order_num, shipping_fee, payment, od_postid, address_id, od_point)
	values((select coalesce(max(order_id), 0)+1 from user_order),#{quantity},#{order_status},#{product_id},#{UID},#{seller_id},#{merchant_uid},#{shipping_fee},#{payment}, #{post_id}, #{address_id}, #{empty_int});
	</insert>
	<!-- 포인트 결제 후 처리 -->
	<update id="user_point_update">
		update user_table set reccode = #{empty_int} + (select reccode from user_table where user_num=#{UID}) where user_num = #{UID};
	</update>
	<!-- 포인트 조회 -->
	<select id="get_user_point" resultType="int">
		select reccode from user_table where user_num = #{cart_user};
	</select>
	<!-- 소지 쿠폰 조회 -->
	<select id="get_user_coupon" resultType="usercoupon">
		select * from user_coupon where user_usernum = #{cart_user};
	</select>
	<!-- 쿠폰 텍스트 -->
	<select id="get_coupon_text" resultType="usercoupon">
		select * from product_coupon where coupon_id = #{user_couponid};
	</select>
	<!-- 쿠폰 후 처리 -->
	<update id="coupon_false">
		update user_coupon set user_couponstatus = false where user_couponid = #{coupon_id};
	</update>
	
	<delete id="cart_del">
	delete from cart where cart_product = #{cart_product};
	</delete>
	
	
	<!-- 결제내역 -->
	<select id="get_paymentLogVO" resultType="paymentlog">
		select * from user_order uo where user_num = #{user_num} order by uo.order_date desc;;
	</select>
	
	<select id="get_date_filter" resultType="paymentlog">
		select uo.order_num, uo.order_date  from (select distinct on (order_num) *
	from user_order) uo 
	where uo.user_num = ${user_num}
	order by uo.order_date desc;
	</select>
	
	<select id="get_wide_list" resultType="userproduct">
	select pp.post_id, pp.post_name,s.seller_id ,s.company_name, s.shop_tell, p.product_price, p.product_id, po.option1, po.option2, po.option1_name , po.option2_name, pimg.photo_url  from product_posting pp  
	inner join seller s on pp.post_sellerid = s.seller_id 
	inner join product p on p.product_postid  = pp.post_id 
	inner join product_option po on po.op_productid = p.product_id 
	INNER JOIN (
         SELECT photo_id, photo_postid, photo_url FROM product_image 
         WHERE (photo_id, photo_postid) 
         IN (
            SELECT MIN(photo_id) AS photo_id, photo_postid
            FROM product_image 
            GROUP BY photo_postid 
         )
      ) pimg ON p.product_postid = pimg.photo_postid
	where p.product_id = #{product_id}
	</select>
	
	<update id="buy_check_update">
		update user_order set order_status = '구매확정', confirm_date = now() where order_id = #{order_id}
	</update>
	
	<select id="get_refund" resultType="paymentlog">
	 	select * from user_order uo where order_num = #{merchant_UID};
	</select>
	
	<select id="get2_refund" resultType="paymentlog">
	 	select * from user_order uo where order_num = #{merchant_UID} and product_id = #{product_id} and order_status = '환불처리';
	</select>
	
	<insert id="userorder_refund_add">
	insert into user_order(order_id,quantity, order_status, product_id, user_num, seller_id, order_num, shipping_fee, payment, od_postid, address_id, od_point, refund_id, order_date)
	values((select coalesce(max(order_id), 0)+1 from user_order),#{quantity},#{order_status},#{product_id},#{user_num},#{seller_id},#{order_num},#{shipping_fee},#{payment}, #{post_id}, #{address_id}, #{empty_int}, #{order_id}, #{order_date});
	</insert>
	
	<update id="userorder_refund_update">
	 update user_order set refund_id = #{order_id} where order_num = #{order_num} and product_id = #{product_id} and order_status != '환불처리';
	</update>
	
	<select id="get_payvo" resultType="paymentlog">
		select * from payment where py_orderid = #{order_id};
	</select>
	
	<insert id="payment_add2">
		insert into payment(payment_id,pay_ordernum,payment_way,payment_total, py_sellerid, py_final, py_orderid ,py_couponid, py_discount)
	values((select coalesce(max(payment_id), 0)+1 from payment), #{order_num}, #{payment_total}, #{py_sellerid}, #{py_final}, #{py_orderid}, #{py_couponid}, #{py_discount} );
	</insert>
</mapper>