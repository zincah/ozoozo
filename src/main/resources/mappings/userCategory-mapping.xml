<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
 <mapper namespace="UserCategoryDAO">
 
 	<select id="checkCount" resultType="int">
 		SELECT COUNT(*) FROM sub_category WHERE top_catecode=#{top_catecode} AND sub_depth = 1
 	</select>
 	
 	<select id="selectCategoryList" resultType="ucate">
 		SELECT * FROM sub_category WHERE top_catecode=#{top_catecode} AND subcate_code/100=#{checksub}
 		ORDER BY subcate_code
 	</select>
 	
 	<select id="printTitle" resultType="ucate">
 		SELECT * FROM category
 	</select>
 	
 	<!-- category 내부에 상품 뿌리기 -->
 	<select id="selectProductByCate" resultType="userproduct">
 		SELECT po.post_id, po.star_ratio, po.post_name, po.sale_ratio, 
 		po.whole_price, po.shipping_info1, po.po_category, po.po_subcate, 
 		po.post_status, po.po_subcate, s.company_name, pimg.photo_url 
		FROM product_posting po INNER JOIN seller s ON po.post_sellerid = s.seller_id
		INNER JOIN (
			SELECT photo_id, photo_postid, photo_url FROM product_image 
			WHERE (photo_id, photo_postid) 
			IN (
				SELECT MIN(photo_id) AS photo_id, photo_postid
				FROM product_image 
				GROUP BY photo_postid 
			)
		) pimg ON po.post_id = pimg.photo_postid
		<where>
			po.post_status='판매중' AND po.po_category=#{top_catecode} 
			<if test="midcate_code != 0">
				<trim prefix="and">
					po_subcate/100=#{midcate_code}
				</trim>
			</if>
			<if test="subcate_code != 0">
				<trim prefix="and">
					po_subcate=#{subcate_code}
				</trim>
			</if>
		</where>
		ORDER BY po.post_id DESC
		limit 12 offset #{thispage} * 12
 	</select>
 	
 	<!-- 카테고리 이름 받아오기 -->
 	<select id="getCateName" resultType="ucate">
 		SELECT subcate_code, subcate_name FROM sub_category WHERE top_catecode=#{top_catecode} AND subcate_code=#{midcate_code}*100 OR subcate_code=#{subcate_code};
 	</select>

	<!-- 대망의 filtering -->
	<!-- post id 받아오는 부분 -->
	<select id="getPostList" resultType="ucate">
		SELECT DISTINCT ON(dprodetails_postid) pd.dprodetails_postid, pd.detail_name, 
		pd.detail_value, pd.dtop_catecode, fe.filter_depth, fe.filter_name
		FROM product_details pd
		INNER JOIN filter_element fe 
		ON pd.detail_value = fe.filter_id
		WHERE fe.filter_depth=2 AND dtop_catecode=#{top_catecode} 
		<if test="filtering.size() > 0">
				<trim prefix="and">
					fe.filter_name IN 
					<foreach item="item" collection="filtering" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</trim>
		</if>
	</select>   
	
	<!-- 그 post id에 따른 게시물 받아오기 --> 
 	<select id="selectProductByFilter" resultType="userproduct">
 		SELECT po.post_id, po.star_ratio, po.post_name, po.whole_price*(1-po.sale_ratio/100.0) as sale_price, po.sale_ratio, 
		po.whole_price, po.shipping_info1, po.po_category, po.po_subcate, 
		po.post_status, po.po_subcate, s.company_name, pimg.photo_url, od.payment, scount
		FROM product_posting po INNER JOIN seller s ON po.post_sellerid = s.seller_id
		INNER JOIN (
			SELECT photo_id, photo_postid, photo_url FROM product_image 
			WHERE (photo_id, photo_postid) 
			IN (
				SELECT MIN(photo_id) AS photo_id, photo_postid
				FROM product_image 
				GROUP BY photo_postid 
			)
		) pimg ON po.post_id = pimg.photo_postid
		left outer join (select od_postid, sum(payment) as payment from user_order group by od_postid) od on po.post_id = od.od_postid
		left outer join (select count(sc_postid) as scount, sc_postid from user_scrap group by sc_postid) sc on po.post_id = sc_postid
		<where>
			po.post_status='판매중' AND po.po_category=#{top_catecode} 
			<if test="midcate_code != 0">
				<trim prefix="and">
					po_subcate/100=#{midcate_code}
				</trim>
			</if>
			<if test="subcate_code != 0">
				<trim prefix="and">
					po_subcate=#{subcate_code}
				</trim>
			</if>
			<if test="post_ids.size() > 0">
				<trim prefix="and">
					po.post_id IN 
					<foreach item="item" collection="post_ids" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</trim>
			</if>
			<if test="post_ids.size() == 0">
				<trim prefix="and">
					po.post_id = 60000
				</trim>
			</if>
		</where>
		<if test="orderKind == 'latestRanking' or orderKind == null">
			order by po.post_id desc
		</if>
		<if test="orderKind == 'saleRanking'">
			order by od.payment is null asc, od.payment desc
		</if>
		<if test="orderKind == 'popularRanking'">
			order by scount is null asc, scount desc
		</if>
		<if test="orderKind == 'reviewRanking'">
			order by po.post_id desc
		</if>
		<if test="orderKind == 'highpriceRanking'">
			order by sale_price desc
		</if>
		<if test="orderKind == 'rowpriceRanking'">
			order by sale_price
		</if>
		limit 3 offset #{thispage} * 3
 	</select>
 	
 	<!-- 필터링 개수 받아오기 -->
 	<select id="filteringCount" resultType="int">
 		SELECT COUNT(post_id) FROM product_posting
		<where>
			post_status='판매중' AND po_category=#{top_catecode} 
			<if test="midcate_code != 0">
				<trim prefix="and">
					po_subcate/100=#{midcate_code}
				</trim>
			</if>
			<if test="subcate_code != 0">
				<trim prefix="and">
					po_subcate=#{subcate_code}
				</trim>
			</if>
			<if test="post_ids.size() > 0">
				<trim prefix="and">
					post_id IN 
					<foreach item="item" collection="post_ids" index="index" open="(" close=")" separator=",">
						#{item}
					</foreach>
				</trim>
			</if>
			<if test="post_ids.size() == 0">
				<trim prefix="and">
					post_id = 60000
				</trim>
			</if>
		</where>
 	</select>
 	
 	<!-- 처음 게시물 개수 받아오기 : paging total --> 
 	<select id="getCategoryCount" resultType="int">
 		SELECT COUNT(*) FROM product_posting
		<where>
			post_status='판매중' AND po_category=#{top_catecode} 
			<if test="midcate_code != 0 and midcate_code != null">
				<trim prefix="and">
					po_subcate/100=#{midcate_code}
				</trim>
			</if>
			<if test="subcate_code != 0 and midcate_code != null">
				<trim prefix="and">
					po_subcate=#{subcate_code}
				</trim>
			</if>
		</where>
 	</select>

	<!-- category filter option 가져오기 -->
	<select id="getFilterOption" resultType="filter">
    	select * from filter_element where ftop_catecode=#{top_catecode} and filter_id/100=#{checksub} order by filter_id;
    </select>

    
 </mapper>