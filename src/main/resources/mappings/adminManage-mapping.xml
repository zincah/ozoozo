<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="AdminManageDAO">


	<!-- 현재 사용하는거 회원관리, 총 검색, 회원정보 수정 -->
	<!-- 유동인구 관리 -->
	<select id="floatingPopulation" resultType="user">
		SELECT COUNT(lc_usernum), login_date FROM logincount GROUP BY login_date ORDER BY login_date DESC
		LIMIT 7 OFFSET 0 * 7
	</select>

	<!-- 회원관리 -->
	<select id="selectUser" resultType="user">
		SELECT user_num, user_email, nickname, gender, reccode, last_login, join_date, user_status, user_type FROM user_table ORDER BY user_num DESC;
	</select>

	<!-- 회원상태 변경 -->
	<update id="updateUserStatus" parameterType="user">
		UPDATE user_table SET user_status=#{user_status} WHERE user_num = #{user_num};
	</update>
	
	<!-- 실시간 검색 -->
	<select id="useSearchBox" parameterType="user" resultType="user">
		SELECT user_num, user_email, nickname, gender, reccode, last_login, join_date, user_status, user_type FROM user_table 
		<where>
			<if test="pack=='nickname'.toString()">
				nickname LIKE '%'||#{keyword}||'%' ORDER BY user_num DESC
			</if>
			<if test="pack=='email'.toString()">
				user_email LIKE '%'||#{keyword}||'%' ORDER BY user_num DESC
			</if>
		</where>
	</select>
	
	<!-- 총 검색 -->
	<select id="getUserList" parameterType="user" resultType="user">
		SELECT user_num, user_email, nickname, gender, reccode, last_login, join_date, user_status, user_type FROM user_table 
		<where>
			<if test="user_type != '' and user_type != null">
				user_type = #{user_type}
			</if>
			<if test="user_status != '' and user_status != null">
				<trim prefix="and">
					user_status = #{user_status}
				</trim>
			</if>
			<if test="enddate != null and startdate != null">
				<trim prefix="and">
					join_date BETWEEN #{startdate} AND #{enddate}
				</trim>
			</if>
			<if test="pack != null and pack != ''">
				<trim prefix="and">
					<if test="pack=='nickname'.toString()">
						nickname LIKE '%'||#{keyword}||'%'
					</if>
					<if test="pack=='email'.toString()">
						user_email LIKE '%'||#{keyword}||'%'
					</if>
				</trim>
			</if>
		</where>
		<trim prefix="order by">
			user_num DESC limit #{cri.amount} offset (#{cri.pageNum}-1) * #{cri.amount}
		</trim>
	</select>
	
	<!-- total count (검색시도 포함) -->
	<select id="getUserListCount" parameterType="user" resultType="user">
		SELECT user_num, user_email, nickname, gender, reccode, last_login, join_date, user_status, user_type FROM user_table 
		<where>
			<if test="user_type != '' and user_type != null">
				user_type = #{user_type}
			</if>
			<if test="user_status != '' and user_status != null">
				<trim prefix="and">
					user_status = #{user_status}
				</trim>
			</if>
			<if test="enddate != null and startdate != null">
				<trim prefix="and">
					join_date BETWEEN #{startdate} AND #{enddate}
				</trim>
			</if>
			<if test="pack != null and pack != ''">
				<trim prefix="and">
					<if test="pack=='nickname'.toString()">
						nickname LIKE '%'||#{keyword}||'%'
					</if>
					<if test="pack=='email'.toString()">
						user_email LIKE '%'||#{keyword}||'%'
					</if>
				</trim>
			</if>
		</where>
	</select>
	
	
	<!-- admin 상품 상태 바꾸기 : product-posting -->
	<update id="updateProductStatus1">
		UPDATE product_posting SET post_status=#{post_status} WHERE post_id=#{post_id};
	</update>
	
	<!-- admin 상품 상태 바꾸기 : product-status -->
	<update id="updateProductStatus2">
		UPDATE product_status AS pos SET status=#{post_status} FROM product AS pp WHERE pos.st_product_id = pp.product_id AND pp.product_postid=#{post_id};
	</update>
	
	<!-- admin 상품에서 쿠폰 검색 -->
	<select id="selectCouponList" resultType="adminproduct">
		SELECT coupon_id, coupon_title, coupon_subtitle FROM product_coupon WHERE coupon_status = '사용중';
	</select>
	
	<!-- admin 쿠폰 상태 바꾸기 : coupon-status -->
	<update id="updateCouponStatus">
		UPDATE product_posting SET post_couponid=#{post_couponid} WHERE post_id=#{post_id};
	</update>
	
	<!-- admin deal 상태 바꾸기 : deal-info, post -->
	<update id="updateDealStatus">
		UPDATE deal_info SET deal_status=#{deal_status} WHERE deal_postid=#{post_id};
	</update>
	
	<update id="updateDealStatusOnPost">
		UPDATE product_posting SET today_deal=#{today_deal} WHERE post_id=#{post_id};
	</update>
	
	<delete id="deleteDeal">
		DELETE FROM deal_info WHERE deal_postid=#{post_id}
	</delete>

	
	<!-- 총 검색 -->
	<select id="getProductList" parameterType="adminproduct" resultType="adminproduct">
		SELECT po.post_id as post_id, ss.company_name as company_name, di.deal_status as deal_status, po.best_product as best_product, po.post_name as post_name, pp.product_created as product_created, pp.product_count as product_count, ca.cate_name as cate_name, sc.subcate_name as subcate_name, po.post_status as post_status, po.post_couponid as post_couponid, pc.coupon_title as coupon_title
		FROM product_posting po INNER JOIN (
			SELECT MAX(product_created) AS product_created , count(product_postid) AS product_count, product_postid FROM product GROUP BY product_postid 
		) pp ON po.post_id = pp.product_postid
		INNER JOIN seller ss ON po.post_sellerid = ss.seller_id 
		INNER JOIN category ca ON po.po_category = ca.cate_code
		INNER JOIN sub_category sc ON po.po_subcate = sc.subcate_code
		LEFT OUTER JOIN product_coupon pc ON po.post_couponid = pc.coupon_id 
		LEFT OUTER JOIN deal_info di ON po.post_id = di.deal_postid
		<where>
			<if test="post_status != '' and post_status != null">
				post_status = #{post_status}
			</if>
			<if test="cate_name != '' and cate_name != null">
				<trim prefix="and">
					cate_name = #{cate_name}
				</trim>
			</if>
			<if test="enddate != null and startdate != null">
				<trim prefix="and">
					product_created BETWEEN #{startdate} AND #{enddate}
				</trim>
			</if>
			<if test="pack != '' and pack != null">
				<trim prefix="and">
					<if test="pack=='company_name'.toString()">
						company_name LIKE '%'||#{keyword}||'%'
					</if>
					<if test="pack=='post_name'.toString()">
						post_name LIKE '%'||#{keyword}||'%'
					</if>
					<if test="pack=='subcate_name'.toString()">
						subcate_name LIKE '%'||#{keyword}||'%'
					</if>
				</trim>
			</if>
		</where>
		<trim prefix="order by">
			post_id DESC limit #{cri.amount} offset (#{cri.pageNum}-1) * #{cri.amount}
		</trim>
	</select>
	
	<!-- 총 검색 count -->
	<select id="searchListCount" parameterType="adminproduct" resultType="adminproduct">
		SELECT po.post_id as post_id, ss.company_name as company_name, di.deal_status as deal_status, po.best_product as best_product, po.post_name as post_name, pp.product_created as product_created, pp.product_count as product_count, ca.cate_name as cate_name, sc.subcate_name as subcate_name, po.post_status as post_status, po.post_couponid as post_couponid, pc.coupon_title as coupon_title
		FROM product_posting po INNER JOIN (
			SELECT MAX(product_created) AS product_created , count(product_postid) AS product_count, product_postid FROM product GROUP BY product_postid 
		) pp ON po.post_id = pp.product_postid
		INNER JOIN seller ss ON po.post_sellerid = ss.seller_id 
		INNER JOIN category ca ON po.po_category = ca.cate_code
		INNER JOIN sub_category sc ON po.po_subcate = sc.subcate_code
		LEFT OUTER JOIN product_coupon pc ON po.post_couponid = pc.coupon_id 
		LEFT OUTER JOIN deal_info di ON po.post_id = di.deal_postid
		<where>
			<if test="post_status != '' and post_status != null">
				post_status = #{post_status}
			</if>
			<if test="cate_name != '' and cate_name != null">
				<trim prefix="and">
					cate_name = #{cate_name}
				</trim>
			</if>
			<if test="enddate != null and startdate != null">
				<trim prefix="and">
					product_created BETWEEN #{startdate} AND #{enddate}
				</trim>
			</if>
			<if test="pack != '' and pack != null">
				<trim prefix="and">
					<if test="pack=='company_name'.toString()">
						company_name LIKE '%'||#{keyword}||'%'
					</if>
					<if test="pack=='post_name'.toString()">
						post_name LIKE '%'||#{keyword}||'%'
					</if>
					<if test="pack=='subcate_name'.toString()">
						subcate_name LIKE '%'||#{keyword}||'%'
					</if>
				</trim>
			</if>
		</where>
	</select>
	
	<!-- 업체 관리 -->
	<select id="selectSellerList" resultType="seller">
		SELECT s.*, brandstar FROM seller s
		INNER JOIN (SELECT SUM(star_ratio)/COUNT(post_id) AS brandstar, post_sellerid FROM product_posting GROUP BY post_sellerid) po
		ON po.post_sellerid = s.seller_id;
	</select>
	
	<select id="getSellerInfo" resultType="seller">
		SELECT * FROM seller WHERE seller_id=#{seller_id};
	</select>
	
	<!-- 입점 상태 변경 -->
	<update id="sellerStatusUpdate" parameterType="seller">
		UPDATE seller SET seller_status=#{seller_status} 
		<where>
			seller_id IN 
			<foreach item="item" collection="sellerList" index="index" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</where> 
	</update>
	
	<!-- filtering -->
	<select id="sellerSearchBox" resultType="seller">
		SELECT s1.*, s2.sid_text FROM seller s1 INNER JOIN 
		(SELECT seller_id::text sid_text, seller_id FROM seller) s2 ON s1.seller_id = s2.seller_id
		where s2.sid_text like '%'||'테'||'%' or s1.company_name like '%'||'테'||'%';
		<where>
			<if test="keyword != '' and keyword != null">
				s2.sid_text like '%'||#{keyword}||'%'
				<trim prefix="or">
				s1.company_name like '%'||#{keyword}||'%'
				</trim>
				<trim prefix="or">
				s1.representative like '%'||#{keyword}||'%'
				</trim>
			</if>
		</where>
	</select>
	
</mapper>